!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";function r(){[".ru",".en"].forEach(e=>{!function(e){let t=document.querySelector(e+" .activities"),o=document.querySelector(e+" .year"),r=document.querySelectorAll(e+" .name"),n=[...r].reduce((e,t)=>e.offsetWidth>t.offsetWidth?e:t);function a(){n.style.marginLeft=0;let e=Math.abs(t.offsetWidth-n.offsetWidth-o.offsetWidth-5);e<40&&(e=40),r.forEach(t=>{t.style.marginLeft=e+"px"})}a(),window.addEventListener("resize",a)}(e)})}function n(){let e=[];[".ru",".en"].forEach(t=>{!function(t){let o=document.querySelector(t+" .projects"),r=document.querySelector(t+" .text"),n=document.querySelector(t+" .container"),a=document.querySelector(t+" .sound-popup"),l=!1,i=!1,s=!1;r.addEventListener("mouseover",(function(o){e.push(setTimeout(()=>{if(o.target.id){let e=document.querySelector(`${t} .images__${o.target.id} .image`);n.style.opacity=0,e.style.opacity=1,e.play&&(s||"derive"==o.target.id?(e.play(),o.target.style.cursor="none"):(a.style.display="flex",a.style.left=o.pageX-100+"px",a.style.top=o.pageY-100+"px",setTimeout(()=>{a.style.opacity=1},0))),!0!==i||"transport"!=o.target.id&&"high"!=o.target.id||(e.muted=!1)}},500))})),r.addEventListener("mouseout",(function(o){if(e.forEach(e=>{clearTimeout(e)}),o.target.id){let e=document.querySelector(`${t} .images__${o.target.id} .image`);n.style.opacity=1,e.style.opacity=0,e.play&&(e.pause(),o.target.style.cursor="default"),!0!==i||"transport"!=o.target.id&&"high"!=o.target.id||(e.muted=!0)}})),o.addEventListener("mouseover",(function(o){e.push(setTimeout(()=>{if(o.target.id&&!l){let r=document.querySelectorAll(`${t} .images__${o.target.id} div`),a=1e3*r.length;l=!0,n.style.opacity=0,e.push(setTimeout(()=>{n.style.opacity=1,l=!1},a));let i=0;r.forEach(t=>{e.push(setTimeout(()=>{t.style.opacity=1},i)),i+=1e3,e.push(setTimeout(()=>{t.style.opacity=0},i+200))})}},500))})),o.addEventListener("mouseout",(function(o){e.forEach(e=>{clearTimeout(e),document.querySelectorAll(`${t} .images__${o.target.id} div`).forEach(e=>{e.style.opacity=0}),n.style.opacity=1,l=!1})})),a.addEventListener("click",(function(e){s=!0,"on"==e.target.id&&(i=!0),"off"==e.target.id&&(i=!1),e.target.id&&(this.style.opacity=0,setTimeout(()=>{this.style.display="none"},500))}))}(t)})}o.r(t),window.addEventListener("DOMContentLoaded",()=>{document.querySelector("body").style.opacity=1,function(){let e=void 0;const t=document.location.search.slice(1);void 0!==localStorage.language?e="true"===localStorage.language:"ru"===t?(e=!0,localStorage.language=e):"en"===t?(e=!1,localStorage.language=e):(e="ru"==navigator.language.slice(0,2),localStorage.language=e,setTimeout(()=>{n.style.transform="translateY(115px)"},2e3),setTimeout(()=>{n.style.transform="translateY(-115px)"},7e3),setTimeout(()=>{a.style.transform="translateY(115px)"},2e3),setTimeout(()=>{a.style.transform="translateY(-115px)"},7e3));const o=document.querySelector(".ru"),r=document.querySelector(".en"),n=document.querySelector(".ru .lang-popup"),a=document.querySelector(".en .lang-popup"),l=document.querySelector(".en .lang-popup__switch"),i=document.querySelector(".ru .lang-popup__switch");function s(e){e?(r.style.opacity=0,setTimeout(()=>{r.style.display="none",window.scrollTo(0,0)},500),o.style.display="block",setTimeout(()=>{o.style.opacity=1},0)):(o.style.opacity=0,setTimeout(()=>{o.style.display="none",window.scrollTo(0,0)},500),r.style.display="block",setTimeout(()=>{r.style.opacity=1},0))}s(e),i.addEventListener("click",()=>{s(!1),localStorage.language=!1,a.style.transform="translateY(-115px)",n.style.transform="translateY(-115px)",l.innerText="Переключиться обратно на русский.",setTimeout(()=>{i.innerText="Switch back to English."},2e3)}),l.addEventListener("click",()=>{s(!0),localStorage.language=!0,a.style.transform="translateY(-115px)",n.style.transform="translateY(-115px)",i.innerText="Switch back to English.",setTimeout(()=>{l.innerText="Переключиться обратно на русский."},2e3)}),setTimeout(()=>{window.addEventListener("mousemove",e=>{e.clientY<=80&&e.clientX>=.5*window.screen.width-300&&e.clientX<=.5*window.screen.width+300?(a.style.transform="translateY(115px)",n.style.transform="translateY(115px)"):(a.style.transform="translateY(-115px)",n.style.transform="translateY(-115px)")})},7e3),document.addEventListener("mouseout",e=>{a.style.transform="translateY(-115px)",n.style.transform="translateY(-115px)"})}(),r(),window.innerWidth>1023&&n();Array.from(document.querySelectorAll(".player")).map(e=>new Plyr(e,{hideControls:!1}))})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,